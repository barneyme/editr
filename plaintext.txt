# WHY PLAINTEXT?
Plaintext is a simple, universal format used for a wide range of tasks, from jotting down quick notes to writing code. Its biggest advantage is its portability; any device can open and read a plaintext file without special software. It's lightweight, fast, and distraction-free.


# COMMON PLAINTEXT FILES.
Some common plaintext file formats include:
.txt (Text File)
.md (Markdown)
.csv (Comma-Separated Values)
.html (HyperText Markup Language)
.css (Cascading Style Sheets)
.js (JavaScript)
.py (Python)
.ps1 (Powershell)
.sh (Bash Script)
.json (JavaScript Object Notation)


# WRITING
Plaintext is ideal for drafting content like blog posts, essays, or even book chapters. It removes all visual and formatting distractions, forcing you to focus purely on getting your words and ideas down.

By eliminating temptations like font choices and style adjustments, you can concentrate on creating a strong, well-structured argument first. Many writers use a simple syntax called Markdown to add basic structure—like headings and lists—that can be easily converted and styled later in a word processor or a website's content editor.

Example:
DRAFT: New post for the blog
=============================
# My Favorite Walking Trail in My Town
There's a great trail that starts near the library and follows the Blue River. It's especially beautiful this time of year.
## What to Expect
The path is mostly flat and covered in gravel, making it an easy walk. Key features include:
* Beautiful views of the river
* Lots of shade from old maple trees
* Benches placed every half-mile or so
## Final Thoughts
It's the perfect spot to clear your head after a long day. **Highly recommended** for a quiet morning or evening stroll.


# MARKDOWN.
Markdown is a lightweight markup language created to make text easy to read and write while allowing simple formatting for the web. It uses plain-text symbol which can then be converted into structured HTML or a PDF. It is popular for documentation, blogging, wikis, and collaborative platforms like GitHub.

Basic Markdown Syntax Examples:
# Heading level 1
## Heading level 2
**Bold text**
*Italic text*
Numbered list
1. First item
2. Second item
Bulleted list
- First item
- Second item
- Third item
![Image](/image.png)
[Link](https://www.link.com)


# TO-DO LIST.
Plaintext is perfect for a simple to-do list. You can use symbols like brackets [] to mark tasks. An x inside indicates a completed task.

Example:
TODO LIST.
============
[x] Email the quarterly report
[ ] Schedule dentist appointment
[ ] Buy groceries
    - Milk
    - Bread
    - Eggs
[ ] Plan weekend trip


# NOTE TAKING.
For taking notes, plaintext is fast and efficient. You don't have to worry about formatting, so you can focus on capturing information. You can use simple markers like dashes or asterisks to create bullet points.

Example:
Meeting Notes - July 26, 2025
-----------------------------
* Project Alpha:
    - Phase 1 is complete.
    - Phase 2 begins next Monday.
    - Need to finalize the budget with finance.
* New Hire Onboarding:
    - Sarah starts on August 1st.
    - Her laptop and credentials need to be ready.


# DELEGATED TASKS
Track what you've delegated and follow up systematically.

Example:
DELEGATED TASKS
===============
ASSIGNED TO: Sarah
Task: Update customer database
Due: 2025-07-30
Status: In progress
Last check-in: 2025-07-25
Notes: Waiting for IT to provide access

ASSIGNED TO: Mike
Task: Create Q3 sales report
Due: 2025-08-01
Status: Not started
Last check-in: 2025-07-23
Notes: Follow up on data sources needed


# SCHEDULE
Create daily or weekly schedule templates in plaintext. Use simple time blocks to plan your day without the overhead of calendar apps.

Example:
DAILY SCHEDULE - July 27, 2025
==============================
08:00-09:00  Deep work: Project Alpha
09:00-09:30  Email and Slack catch-up
09:30-11:00  Client presentation prep
11:00-12:00  Team standup + follow-ups
12:00-13:00  Lunch break
13:00-15:00  Code review and bug fixes
15:00-15:30  Admin tasks (invoices, reports)
15:30-17:00  Strategic planning for Q4


# JOURNAL
Keeping a daily journal in plaintext is a great way to record your thoughts without the clutter of a fancy app. Just create a new file for each entry, perhaps with the date as the filename (e.g., 2025-07-26.txt).

Example:
July 26, 2025
Woke up early this morning. The weather today is perfect. Spent the morning working on the garden and then went for a walk by the river. It's nice to have quiet moments like these. I feel really productive today and managed to cross off most of my to-do list. Looking forward to a relaxing evening.


# WEEKLY REFLECTION
Use plaintext for regular productivity reviews. Track what worked, what didn't, and adjustments for next week.

Example:
WEEK ENDING: July 26, 2025
===========================
COMPLETED:
- Finished user authentication module
- Resolved 8 customer support tickets
- Completed quarterly security audit

CHALLENGES:
- Scope creep on Project Beta (need clearer requirements)
- Too many interruptions during deep work blocks

IMPROVEMENTS FOR NEXT WEEK:
- Block calendar for 2-hour focus sessions
- Set up auto-responder during deep work
- Schedule requirements review for Project Beta


# HABIT TRACKING
Use simple symbols to track daily habits and routines. Create monthly grids or simple daily checkmarks.

Example:
HABIT TRACKER - JULY 2025
=========================
Habit: Exercise | Read 30min | No social media before 10am
07/26: [x]      | [x]        | [ ]
07/27: [x]      | [ ]        | [x]
07/28: [ ]      | [x]        | [x]

Legend: [x] = completed, [ ] = missed, [~] = partial


# PROJECT PLANNING
You can easily outline an entire project using plaintext. Indentation helps create a clear hierarchy of goals, tasks, and sub-tasks. This method is often used for brainstorming and creating a simple project roadmap.

Example:
PROJECT: Website Redesign
=========================
1.  Phase 1: Research & Discovery
    1.1. Analyze competitor websites
    1.2. Define user personas
    1.3. Finalize project goals and KPIs
2.  Phase 2: Design & Prototyping
    2.1. Create wireframes for key pages
    2.2. Develop a high-fidelity mockup
    2.3. User testing on the prototype
3.  Phase 3: Development & Launch
    3.1. Front-end development
    3.2. Back-end integration
    3.3. Final testing and deployment


# MEETING AGENDAS AND MINUTES.
Plaintext is perfect for creating and circulating clear, no-fuss meeting agendas. During the meeting, you can easily take minutes in the same file, marking down decisions and action items. The resulting file is small and easy to email or post in a team chat.

Example:
MEETING: Q3 Marketing Sync
DATE: 2025-07-29
TIME: 10:00 AM EDT
ATTENDEES:
- Dana (Chair)
- Raj
- Sofia
AGENDA:
1.  Review last week's campaign metrics (10 min)
2.  Plan for August product launch (15 min)
3.  Brainstorm new blog post ideas (5 min)
ACTION ITEMS:
- [ ] Raj to send final campaign report by EOD.
- [ ] Sofia to draft creative briefs for August launch.


# CONTACT MANAGEMENT
Keep simple contact records and interaction history without heavy CRM software.

Example:
CLIENT: ABC Corporation
=======================
Contact: John Smith (john@abc.com)
Phone: 555-0123
Last Contact: 2025-07-20
Status: Active client

INTERACTION HISTORY:
2025-07-20: Discussed Q4 budget increase (+15%)
2025-07-01: Delivered monthly report, positive feedback
2025-06-15: Addressed concerns about delivery timeline

NEXT ACTIONS:
- Send proposal for additional services by 07/30
- Schedule quarterly review meeting


# KNOWLEDGE BASE
Create your own reference system for frequently needed information.
Example:

QUICK REFERENCE
===============
KEYBOARD SHORTCUTS:
- Cmd+Shift+4: Screenshot selection
- Cmd+Space: Spotlight search
- Cmd+Tab: Switch applications

SQL SNIPPETS:
- COUNT DISTINCT: SELECT COUNT(DISTINCT column) FROM table;
- DATE RANGE: WHERE date >= '2025-01-01' AND date < '2025-02-01'

USEFUL COMMANDS:
- Git reset: git reset --hard HEAD~1
- Docker cleanup: docker system prune -a
- Kill process: sudo kill -9 [PID]


# TEMPLATE LIBRARY
Keep a collection of plaintext templates for recurring tasks like email responses, project kickoffs, or status reports.

Example:
EMAIL TEMPLATES
===============

PROJECT STATUS UPDATE:
Subject: [Project Name] - Week of [Date]

Progress This Week:
- [Achievement 1]
- [Achievement 2]

Blockers/Concerns:
- [Issue 1]

Next Week Goals:
- [Goal 1]
- [Goal 2]

---

CLIENT FOLLOW-UP:
Subject: Following up on [Topic]

Hi [Name],

Thanks for taking the time to discuss [topic] yesterday.

Next steps:
1. [Action item 1]
2. [Action item 2]

Timeline: [Date]

Best regards,
[Your name]
